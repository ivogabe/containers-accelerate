name: CI

# Trigger the workflow on push or pull request
on:
  pull_request:
  push:
    # but only for the master branch
    # branches: [master]

defaults:
  run:
    shell: bash

jobs:
  stack:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }} / llvm ${{ matrix.llvm }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            ghc: "8.10"
            llvm: "9"

          - os: ubuntu-latest
            ghc: "8.8"
            llvm: "9"

          - os: ubuntu-latest
            ghc: "8.6"
            llvm: "8"

          - os: macOS-latest
            ghc: "8.10"
            llvm: "9"

          # Disabled due to missing libffi
          # - os: windows-latest
          #   ghc: "8.6"
          #   llvm: "9.0.1"

    env:
      STACK_FLAGS: "--system-ghc --no-install-ghc --fast"

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-haskell@v1.1
      with:
        enable-stack: true
        ghc-version: ${{ matrix.ghc }}

    - name: Set up stack
      id: stack-setup
      run: |
        ln -s stack-${{ matrix.ghc }}.yaml stack.yaml
        echo "::set-output name=stack-root::$(stack path --system-ghc --no-install-ghc --stack-root)"

    - uses: actions/cache@v1
      with:
        path: ${{ steps.stack-setup.outputs.stack-root }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ matrix.llvm }}-stack

    - name: Setup (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get -y install llvm-${{ matrix.llvm }}-dev
        echo "::set-env name=LD_LIBRARY_PATH::$(stack exec ghc -- --print-libdir)/rts:${LD_LIBRARY_PATH}"

    - name: Setup (macOS)
      if: runner.os == 'macOS'
      run: |
        brew tap llvm-hs/homebrew-llvm
        brew install pkg-config
        brew install libffi
        brew install llvm-${{ matrix.llvm }}
        echo "::set-env name=PKG_CONFIG_PATH::$(brew --prefix)/opt/libffi/lib/pkgconfig:$PKG_CONFIG_PATH"

    - name: Setup (Windows)
      if: runner.os == 'Windows'
      run: |
        choco install llvm --version=${{ matrix.llvm }}

    - name: Build dependencies
      run: |
        stack build $STACK_FLAGS --test --no-run-tests --only-dependencies

    - name: Build
      run: |
        stack build $STACK_FLAGS --test --no-run-tests

    - name: Test
      run: |
        stack test $STACK_FLAGS --test-arguments='--hedgehog-tests=50 --hedgehog-shrinks=0 --timeout=60s --num-threads=1'

